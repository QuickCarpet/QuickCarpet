{
  "command.carpet.title.all": "All %s Settings",
  "command.carpet.title.startup": "Current %s Startup Settings from carpet.conf",
  "command.carpet.title.search": "%s Settings matching \"%s\"",
  "command.carpet.title.current": "Current %s Settings",
  "command.carpet.rule.invalidValue": "Invalid value: %s",
  "command.carpet.rule.value": "%s is set to: %s",
  "command.carpet.rule.deprecated": "This rule is deprecated: %s",
  "command.carpet.rule.disabled": "disabled",
  "command.carpet.refresh": "Refresh",
  "command.carpet.categories": "Categories: ",
  "command.carpet.options": "Options: ",
  "command.carpet.option.disabled": "Option %s is disabled",
  "command.carpet.switch": "Switch to %s",
  "command.carpet.list": "List %s settings",
  "command.carpet.changePermanently": "change permanently?",
  "command.carpet.changePermanently.hover": "Click to keep the settings in carpet.conf to save across restarts",
  "command.carpet.setDefault.success": "rule %s will now default to %s",
  "command.carpet.removeDefault.success": "rule %s defaults to %s",
  "command.carpet.version": "%s version: %s",
  "command.carpet.version.builtFor": "Built for %s",
  "command.carpet.version.uncommitted": "Uncommitted files present",
  "command.carpet.modules": "Modules:",
  "command.carpet.modules.list": "List module settings",
  "command.carpet.browseCategories": "Browse Categories:",
  "carpet.locked": "Settings are locked",
  "carpet.rule.currentValue": "Current value: %s (%s)",
  "carpet.rule.value.default": "Default value",
  "carpet.rule.value.modified":  "Modified value",
  "carpet.rule.accurateBlockPlacement.description": "Allows client mods to specify the orientation of placed blocks",
  "carpet.rule.alwaysBaby.description": "Allows the player to feed a passive baby mob, a poisonous potato, which makes it a baby.. Forever!",
  "carpet.rule.antiCheat.description": "Prevents players from rubberbanding when moving too fast",
  "carpet.rule.anvilledBlueIce.description": "Drop an anvil on packed ice blocks to get blue ice",
  "carpet.rule.anvilledBlueIce.extra": "Value is the number of packed ice blocks required, 0 is disabled",
  "carpet.rule.anvilledIce.description": "Drop an anvil on frosted ice blocks to get ice",
  "carpet.rule.anvilledIce.extra": "Value is the number of forsted ice blocks required, 0 is disabled",
  "carpet.rule.anvilledPackedIce.description": "Drop an anvil on ice blocks to get packed ice",
  "carpet.rule.anvilledPackedIce.extra": "Value is the number of ice blocks required, 0 is disabled",
  "carpet.rule.autoCraftingTable.description": "Automatic crafting table",
  "carpet.rule.betterChunkLoading.description": "Makes things load chunks again",
  "carpet.rule.betterStatistics.description": "Scoreboards initialize to the statistic values",
  "carpet.rule.blockEntityFix.description": "Fixes a crash when activating droppers or dispensers with invalid block entities",
  "carpet.rule.calmNetherFires.description": "Make infinite fires calmer to cause less lag",
  "carpet.rule.calmNetherFires.extra": "0: disable ticking, 1: vanilla, 2+: multiply the ticking interval",
  "carpet.rule.carefulBreak.description": "Places the mined block in the player inventory when sneaking and subsribed to /log careful_break",
  "carpet.rule.carpetDuplicationFix.description": "Fix carpet duplication using pistons",
  "carpet.rule.cameraModeRestoreLocation.description": "/s restores the player to the location they used /c at",
  "carpet.rule.cameraModeNightVision.description": "doing /c will give you night vision and conduit power",
  "carpet.rule.commandBlockInfo.description": "Enables /blockinfo command to get info about blocks",
  "carpet.rule.commandCameramode.description": "Enables /c, /s and /cs commands to quickly switch between camera and survival modes for players with this permission level",
  "carpet.rule.commandDataTracker.description": "Enables /datatracker for viewing tracked entity data",
  "carpet.rule.commandFix.description": "Enables /fix command to fix chunk data",
  "carpet.rule.commandFluidInfo.description": "Enables /fluidinfo command to get info about fluids",
  "carpet.rule.commandLog.description": "Enables /log command to monitor events in the game via chat and overlays for players with this permission level",
  "carpet.rule.commandMeasure.description": "Enables /measure command for measuring distances for players with this permission level",
  "carpet.rule.commandPing.description": "Enables /ping for players to get their ping for players with this permission level",
  "carpet.rule.commandPlayer.description": "Enables /player command to control/spawn players for players with this permission level",
  "carpet.rule.commandScoreboardPublic.description": "Enables certain /scoreboard commands for all players",
  "carpet.rule.commandSpawn.description": "Enables /spawn command for spawn tracking for players with this permission level",
  "carpet.rule.commandTick.description": "Enables /tick command to analyze game speed for players with this permission level",
  "carpet.rule.commandTickManipulate.description": "Allows the tick rate modifications of /tick for players with this permission level",
  "carpet.rule.commandTickManipulate.extra": "Values lower then commandTick have no effect",
  "carpet.rule.commandWaypoint.description": "Enables /waypoint command for managing waypoints for players with this permission level and /tp [entities] waypoint (for permission level 2)",
  "carpet.rule.connectionTimeout.description": "Set the timeout players trying to connect, 0 to disable timeout",
  "carpet.rule.connectionTimeout.extra": "Also fixes timeout to be time-based instead of tick-based, avoiding issues while tick-warping",
  "carpet.rule.creativeNoClip.description": "Enables players to noclip while in creative mode if they have the client-side setting enabled",
  "carpet.rule.dispensersBreakBlocks.description": "Gives dispensers the ability to break blocks using gunpowder",
  "carpet.rule.dispensersInteractCauldron.description": "Dispensers can interact with a cauldron with a bucket, as if it was a normal liquid block",
  "carpet.rule.dispensersPickupBucketables.description": "Dispensers can pickup all bucketable mobs, such as fish and axolotls. Combined with dispensersInteractCauldron, dispensers can pickup bucketable mobs inside cauldrons",
  "carpet.rule.dispensersPlaceBlocks.description": "Dispensers can place most blocks",
  "carpet.rule.dispensersShearVines.description": "Dispensers can shear vines",
  "carpet.rule.dispensersStripLogs.description": "Dispensers with axes can strip logs and wood",
  "carpet.rule.dispensersTillSoil.description": "Dispensers with hoes can till soil",
  "carpet.rule.doubleRetraction.description": "1.8 double retraction from pistons.",
  "carpet.rule.doubleRetraction.extra": "Gives pistons the ability to double retract without side effects.",
  "carpet.rule.drownedEnchantedTridentsFix.description": "Makes enchantments work on tridents thrown by drowned",
  "carpet.rule.dustOnPistons.description": "Makes redstone dust not pop off pistons",
  "carpet.rule.explosionNoBlockDamage.description": "Explosions won't destroy blocks",
  "carpet.rule.fallingBlockDuplicationFix.description": "Fix duplicating falling blocks using end portals",
  "carpet.rule.fillLimit.description": "Customizable fill/clone volume limit",
  "carpet.rule.fillUpdates.description": "fill/clone/setblock and structure blocks cause block updates",
  "carpet.rule.fillUpdatesPostProcessing.description": "Whether fillUpdates=false post-processes the block state (like when upgrading a world)",
  "carpet.rule.flippinCactus.description": "Players can flip and rotate blocks when holding cactus",
  "carpet.rule.flippinCactus.extra": "Doesn't cause block updates when rotated/flipped\nApplies to pistons, observers, droppers, repeaters, stairs, glazed terracotta etc.",
  "carpet.rule.hopperCounters.description": "Hoppers pointing to wool will count items passing through them",
  "carpet.rule.hopperCounters.extra": "Enables /counter command, and actions while placing red and green carpets on wool blocks\nUse /counter <color?> reset to reset the counter, and /counter <color?> to query\nCounters are global and shared between players, 16 channels available\nItems counted are destroyed, count up to one stack per tick per hopper",
  "carpet.rule.hopperMinecartCooldown.description": "Adds a cooldown to the hopper minecart",
  "carpet.rule.hopperMinecartItemTransfer.description": "Hopper minecarts can push out items like normal hoppers",
  "carpet.rule.infiniteHopper.description": "Hoppers \"pulling\" from wool will keep the items they push out",
  "carpet.rule.infiniteHopper.extra": "Also works together with hopperCounters and hopperMinecartItemTransfer",
  "carpet.rule.isDevelopment.description": "Sets the isDevelopment constant",
  "carpet.rule.isDevelopment.extra": "For example enables the /test command",
  "carpet.rule.lightningKillsDropsFix.description": "Prevents lightning strikes from destroying the items it creates",
  "carpet.rule.movableBlockEntities.description": "Pistons can push block entities, like hoppers, chests etc.",
  "carpet.rule.movableBlockOverrides.description": "Override how pistons interact with any block. Adds weak stickiness behavior used by default for redstone components, flowerpots, etc.",
  "carpet.rule.nbtMotionLimit.description": "Sets the limit for 'Motion' set via NBT",
  "carpet.rule.nbtMotionLimit.extra": "Set to 0 for no limit (could be dangerous)",
  "carpet.rule.netherMaps.description": "Enables normal mapping of the nether",
  "carpet.rule.netherMaps.extra": "Useful for builds above the nether roof or SkyBlock",
  "carpet.rule.persistentPlayers.description": "Save bots and their actions to a file and restore them when reloading the world",
  "carpet.rule.phantomsRespectMobcap.description": "Phantoms don't ignore the mobcap.",
  "carpet.rule.portalCreativeDelay.description": "Portals won't let a creative player go through instantly",
  "carpet.rule.portalCreativeDelay.extra": "Holding obsidian in either hand won't let you through at all",
  "carpet.rule.pushLimit.description": "Piston push limit",
  "carpet.rule.railDuplicationFix.description": "Fix rail duplication using pistons",
  "carpet.rule.railPowerLimit.description": "Rail power limit",
  "carpet.rule.renewableCoral.description": "Coral structures will grow with bonemeal from coral plants",
  "carpet.rule.renewableDeepslate.description": "Makes cobblestone generators generate deepslate instead if below y16",
  "carpet.rule.renewableGravel.description": "Cobblestone crushed by falling anvils makes gravel, or silverfish drop a gravel item when breaking out of a block",
  "carpet.rule.renewableLava.description": "Obsidian surrounded by 6 lava sources has a chance of converting to lava",
  "carpet.rule.renewableNetherrack.description": "Fire charges from dispensers convert cobblestone to netherrack",
  "carpet.rule.renewableSand.description": "Cobblestone crushed by falling anvils makes sand, or silverfish drop a sand item when breaking out of a block",
  "carpet.rule.renewableSoulSand.description": "If a living entity dies on sand with fire on top the sand will convert into soul sand",
  "carpet.rule.renewableSponges.description": "Guardians struck by lightning turn into Elder Guardians",
  "carpet.rule.shulkerSpawningInEndCities.description": "Shulkers will respawn in end cities",
  "carpet.rule.smartSaddleDispenser.description": "Keeps the saddle in the dispenser if the entity in front is already saddled",
  "carpet.rule.sparkingLighter.description": "Adds back the ability to create fire in mid-air using Flint and Steel or Fire Charges",
  "carpet.rule.spawnChunkLevel.description": "Size of the spawn chunks",
  "carpet.rule.spawnChunkLevel.extra": "Like render distance (11 -> 23x23 actively loaded).\nBe aware that a border of 11 chunks will stay loaded around that, once those chunks are loaded somehow.\nHigher levels need lots of RAM (up to 7569 chunks loaded with level 32)",
  "carpet.rule.stackableShulkerBoxes.description": "Empty shulker boxes can stack to 64 when dropped on the ground",
  "carpet.rule.stackableShulkerBoxes.extra": "To move them around between inventories, use shift click to move entire stacks",
  "carpet.rule.stackableShulkerBoxesInInventories.description": "Empty shulker boxes stack to 64 inside of inventories",
  "carpet.rule.terracottaRepeaters.description": "Multiplies the repeater delay by the legacy block data (1-15) of terracotta below or 100 (data value 0: white) instead of the default 2gt",
  "carpet.rule.tileTickLimit.description": "Maximum number of tile-ticks executed per tick",
  "carpet.rule.tntDuplicationFix.description": "Fix tnt duplication using pistons",
  "carpet.rule.tntHardcodeAngle.description": "Sets the horizontal random angle on TNT for debugging of TNT contraptions",
  "carpet.rule.tntPrimeMomentum.description": "Removes random TNT momentum when primed and set to false",
  "carpet.rule.tntUpdateOnPlace.description": "Whether TNT should check for redstone power when placed",
  "carpet.rule.updateSuppressionCrashFix.description": "Fixes updates suppression causing server crashes",
  "carpet.rule.viewDistance.description": "View distance of the dedicated server",
  "carpet.rule.viewDistance.extra": "Use the vanilla client setting for integrated servers",
  "carpet.rule.xpCoolDown.description": "Delay before players can absorb the next Experience Orb",
  "carpet.rule.xpMerging.description": "Enables or disables the vanilla xp merging added in 20w45a",
  "carpet.validator.positive": "Must be positive",
  "carpet.validator.nonNegative": "Must be non-negative",
  "carpet.validator.negative": "Must be negative",
  "carpet.validator.range": "Must be between %s and %s",
  "carpet.validator.tntAngle": "Must be in the range [0,360) or -1 for default",
  "carpet.validator.viewDistance.integrated": "Setting the view distance this way is only supported on dedicated servers",
  "command.counter.unknown": "Unknown counter",
  "command.counter.reset.success": "Restarted all counters",
  "command.counter.reset.one.success": "Restarted %s counter",
  "counter.none": "No items have been counted yet.",
  "counter.none.color": "No items for %s yet",
  "counter.none.color.timed": "No items for %s yet (%s min%s)",
  "counter.realTime": "real time",
  "counter.format": "%s: %s, %s/h, %s min",
  "counter.format.item": "- %s: %s, %s/h",
  "counter.action.reset": "Reset",
  "command.log.playerOnly": "For players only",
  "command.log.availableOptions": "Available logging options:",
  "command.log.subscribed": "Subscribed",
  "command.log.subscribedTo": "Subscribed to %s",
  "command.log.subscribedTo.player": "%s subscribed to %s.",
  "command.log.subscribedTo.option": "Subscribed to %s (%s)",
  "command.log.subscribedTo.option.player": "%s subscribed to %s (%s)",
  "command.log.unsubscribed": "Unsubscribed from %s",
  "command.log.unsubscribed.player": "%s unsubscribed from %s.",
  "command.log.unsubscribed.all": "Unsubscribed from all logs",
  "command.log.action.subscribe": "Subscribe",
  "command.log.action.subscribeTo": "Subscribe to %s",
  "command.log.action.subscribeTo.option": "Subscribe to %s (%s)",
  "command.log.action.unsubscribe.hover": "Click to unsubscribe",
  "command.log.noPlayerSpecified": "No player specified",
  "command.log.unavailable": "Logger %s unavailable: %s",
  "command.log.unknown": "Unknown logger: %s",
  "logger.gc.unavailable": "Requires HotSpot based JVM (You are running %s)",
  "logger.tileTickLimit.message": "Reached tile tick limit (%s > %s)",
  "logger.tileTickLimit.message.lithium": "Reached tile tick limit: %s",
  "command.ping.result": "Your ping is %sms",
  "command.player.onlyExisting": "Can only manipulate existing players",
  "command.player.notOperator": "Non OP players can't control other real players",
  "command.player.notFake": "Only fake players can be moved or killed",
  "command.player.alreadyOnline": "Player %s is already logged on",
  "command.player.banned": "Player %s is banned",
  "command.player.whitelisted": "Whitelisted players can only be spawned by operators",
  "command.player.doesNotExist": "Player %s doesn't exist and cannot spawn in online mode. Turn the server offline to spawn non-existing players",
  "command.player.shadowFake": "Cannot shadow server-side players",
  "command.spawn.tracking.inactive": "No tracker active",
  "command.spawn.tracking.active": "Tracking already active",
  "command.spawn.tracking.started": "Tracking started",
  "command.spawn.tracking.stopped": "Tracking stopped",
  "command.spawn.tracking.title": "Tracking for %s",
  "command.spawn.tracking.category": "%s: %s%% Mobcap filled",
  "command.spawn.tracking.mob": "> %s: %s spawns, %s/h, %s%% success",
  "command.spawn.mobcaps.title": "Mobcaps for %s:",
  "command.spawn.mobcaps.line": "    %s: %s",
  "command.spawn.list.highestBlock": "Highest potentially spawnable block is %s",
  "command.spawn.list.group": "%s:",
  "command.spawn.list.entry": "- %s: %s%%",
  "command.spawn.list.entry.weight": "  - Weight: %s",
  "command.spawn.list.entry.pack": "  - Pack size: %s",
  "command.spawn.list.entry.chance": "  - Spawn chance: %s%%",
  "command.spawn.list.entry.chance.hover": "Chance to spawn according to mob specific rules such as light level checks",
  "command.spawn.list.entry.packRange": "%s-%s",
  "command.spawn.list.entry.canSpawn": "can spawn",
  "command.spawn.list.entry.cantSpawn": "can't spawn",
  "command.spawn.list.entry.fits": "fits",
  "command.spawn.list.entry.collides": "collides",
  "command.tick.current": "Current TPS is: %s",
  "command.tick.freeze": "Game is paused",
  "command.tick.unfreeze": "Game runs normally",
  "command.tick.stats": "Statistics collected over %s ticks",
  "command.tick.stats.loadavg": "Load average (1m/5m/15m) [mspt]",
  "command.tick.stats.minavgmax": "min, avg, max [mspt]",
  "command.tick.stats.lagticks": "Ticks >50ms",
  "command.tick.stats.percentiles": "90th%%, 95th%%, 99th%% [mspt]",
  "command.tick.warp.callback.failed": "Command callback failed: %s",
  "command.tick.warp.callback.failed.unknown": "Command callback failed - unknown error: %s",
  "command.tick.warp.completed": "... Tick warp completed with %s TPS (%s MSPT)",
  "command.tick.warp.interrupted": "Warp interrupted",
  "command.tick.warp.active": "Another player is already advancing time at the moment. Try later or talk to them",
  "command.tick.warp.start": "Warp speed ....",
  "command.tick.warp.status.inactive": "No tick warp is currently active",
  "command.tick.warp.status.active": "Warped %s/%s ticks (%s%%)",
  "command.tick.warp.status.startedBy": "Started by %s",
  "command.tick.warp.status.callback": "Callback command: %s",
  "command.measure.title": "Measurements between %s and %s:",
  "command.measure.line": " - %s: %s (centered: %s)",
  "command.measure.spherical": "Spherical Distance",
  "command.measure.manhattan": "Manhattan Distance",
  "command.measure.cylindrical": "Cylindrical Distance",
  "command.measure.area": "Area",
  "command.measure.volume": "Volume",
  "command.waypoint.error.exists": "Waypoint '%s' already exists",
  "command.waypoint.error.notFound": "Waypoint '%s' not found",
  "command.waypoint.added": "Waypoint %s %s added",
  "command.waypoint.list.invalidPage": "Invalid page",
  "command.waypoint.list.none": "No waypoints found",
  "command.waypoint.list.header.all": "All waypoints",
  "command.waypoint.list.header.dimension": "Waypoints in %s",
  "command.waypoint.list.header.creator": "Waypoints by %s",
  "command.waypoint.list.page": "(page %s/%s)",
  "command.waypoint.list.page.previous": "Previous page",
  "command.waypoint.list.page.next": "Next page",
  "command.waypoint.list.entry": "%s %s",
  "command.waypoint.list.entry.creator": "%s %s by %s",
  "command.waypoint.remove.notAllowed": "You are not allowed to remove %s",
  "command.waypoint.remove.success": "Waypoint %s removed",
  "carpet.profiler.section.format": "%s: %sms",
  "carpet.profiler.section.command_functions": "Command Functions",
  "carpet.profiler.section.network": "Network",
  "carpet.profiler.section.autosave": "Autosave",
  "carpet.profiler.section.autosave.format": "%s: %sms (%sms)",
  "carpet.profiler.section.gc": "GC",
  "carpet.profiler.section.gc.format": "%s: %sms (%sms)",
  "carpet.profiler.section.async_tasks": "Async Tasks",
  "carpet.profiler.section.spawning": "Spawning",
  "carpet.profiler.section.blocks": "Blocks",
  "carpet.profiler.section.fluids": "Fluids",
  "carpet.profiler.section.random_ticks": "Random Ticks",
  "carpet.profiler.section.block_events": "Block Events",
  "carpet.profiler.section.entities": "Entities",
  "carpet.profiler.section.block_entities": "Block Entities",
  "carpet.profiler.section.raids": "Raids",
  "carpet.profiler.section.portals": "Portals",
  "carpet.profiler.section.entity_manager": "Entity Manager",
  "carpet.profiler.section.unknown": "Unknown",
  "carpet.profiler.title": "Average tick time: %sms",
  "carpet.profiler.top_10_counts": "Top 10 counts:",
  "carpet.profiler.top_10_grossing": "Top 10 grossing:",
  "carpet.profiler.entity.line": " - %s in %s: %s",
  "quickcarpet.gui.title.configs": "QuickCarpet Configs",
  "quickcarpet.hotkeys.category.generic_hotkeys": "Generic Hotkeys",
  "quickcarpet.hotkeys.category.rendering_hotkeys": "Rendering Hotkeys",
  "quickcarpet.gui.button.config_gui.generic": "Generic",
  "quickcarpet.gui.button.config_gui.rendering": "Rendering",
  "quickcarpet.gui.button.config_gui.generic_hotkeys": "Generic Hotkeys",
  "quickcarpet.gui.button.config_gui.rendering_hotkeys": "Rendering Hotkeys",
  "quickcarpet.gui.comment.openConfigGui": "The key to open the in-game config GUI",
  "quickcarpet.gui.pretty.syncLowTps": "Sync low TPS",
  "quickcarpet.gui.comment.syncLowTps": "Synchronize client and server tick rate if below 20",
  "quickcarpet.gui.pretty.syncHighTps": "Sync high TPS",
  "quickcarpet.gui.comment.syncHighTps": "Synchronize client and server tick rate if above 20",
  "quickcarpet.gui.pretty.movingBlockCulling": "Moving block culling",
  "quickcarpet.gui.comment.movingBlockCulling": "Cull the insides of moving transparent blocks",
  "quickcarpet.gui.pretty.creativeNoClip": "Creative Noclip",
  "quickcarpet.gui.comment.creativeNoClip": "Enable noclip while in creative (requires server setting to be true)",
  "quickcarpet.gui.pretty.creativeNoClipOverride": "Creative Noclip Override",
  "quickcarpet.gui.comment.creativeNoClipOverride": "Pretends the server setting is turned on",
  "quickcarpet.gui.pretty.soundEngineFix": "Sound Engine Fix",
  "quickcarpet.gui.comment.soundEngineFix": "Fixes the log spam caused by too many sound sources",
  "side.up": "Top",
  "side.down": "Bottom",
  "side.north": "North",
  "side.south": "South",
  "side.west": "West",
  "side.east": "East",
  "state_info_provider.2": "%s: %s, rest: %s",
  "command.stateinfo.block_state": "Block State",
  "command.stateinfo.fluid_state": "Fluid State",
  "command.stateinfo.line": "%s: %s",
  "quickcarpet.block_info_provider.quickcarpet.propagates_skylight": "Propagates skylight",
  "quickcarpet.block_info_provider.quickcarpet.opacity": "Opacity",
  "quickcarpet.block_info_provider.quickcarpet.large_collision_shape": "Large collision shape",
  "quickcarpet.block_info_provider.quickcarpet.use_shape_for_light_occlusion": "Uses exact shape for light",
  "quickcarpet.block_info_provider.quickcarpet.light_emission": "Light emission",
  "quickcarpet.block_info_provider.quickcarpet.air": "Is air",
  "quickcarpet.block_info_provider.quickcarpet.map_color": "Map color",
  "quickcarpet.block_info_provider.quickcarpet.conducts_power": "Conducts power",
  "quickcarpet.block_info_provider.quickcarpet.emits_power": "Emits power",
  "quickcarpet.block_info_provider.quickcarpet.weak_power": "Weak power",
  "quickcarpet.block_info_provider.quickcarpet.strong_power": "Strong power",
  "quickcarpet.block_info_provider.quickcarpet.analog_signal": "Analog signal",
  "quickcarpet.block_info_provider.quickcarpet.destroy_speed": "Destroy speed",
  "quickcarpet.block_info_provider.quickcarpet.push_reaction": "Piston push reaction",
  "quickcarpet.block_info_provider.quickcarpet.simple_full_cube": "Simple full cube",
  "quickcarpet.block_info_provider.quickcarpet.opaque": "Opaque",
  "quickcarpet.block_info_provider.quickcarpet.offset_x": "Offset (X)",
  "quickcarpet.block_info_provider.quickcarpet.offset_y": "Offset (Y)",
  "quickcarpet.block_info_provider.quickcarpet.offset_z": "Offset (Z)",
  "quickcarpet.block_info_provider.quickcarpet.suffocates": "Suffocates",
  "quickcarpet.block_info_provider.quickcarpet.pathfindable_land": "Pathfindable (Land)",
  "quickcarpet.block_info_provider.quickcarpet.pathfindable_air": "Pathfindable (Air)",
  "quickcarpet.block_info_provider.quickcarpet.pathfindable_water": "Pathfindable (Water)",
  "quickcarpet.block_info_provider.quickcarpet.can_survive": "Can survive",
  "quickcarpet.block_info_provider.quickcarpet.post_process": "Has post-processing",
  "quickcarpet.block_info_provider.quickcarpet.random_ticks": "Random ticks",
  "quickcarpet.block_info_provider.quickcarpet.face_sturdy": "Face sturdy",
  "quickcarpet.block_info_provider.quickcarpet.center_sturdy": "Center sturdy",
  "quickcarpet.block_info_provider.quickcarpet.rigid_sturdy": "Rigid sturdy",
  "quickcarpet.block_info_provider.quickcarpet.full_cube": "Full cube",
  "quickcarpet.block_info_provider.quickcarpet.requires_correct_tool": "Requires correct tool",
  "quickcarpet.block_info_provider.quickcarpet.material_solid": "Material - Solid",
  "quickcarpet.block_info_provider.quickcarpet.material_blocks_movement": "Material - Blocks movement",
  "quickcarpet.block_info_provider.quickcarpet.material_liquid": "Material - Liquid",
  "quickcarpet.block_info_provider.quickcarpet.material_flammable": "Material - Flammable",
  "quickcarpet.block_info_provider.quickcarpet.material_replaceable": "Material - Replaceable",
  "quickcarpet.block_info_provider.quickcarpet.material_push_reaction": "Material - Piston push reaction",
  "quickcarpet.block_info_provider.quickcarpet.material_color": "Material - Color",
  "quickcarpet.fluid_info_provider.quickcarpet.source": "Is Source",
  "quickcarpet.fluid_info_provider.quickcarpet.empty": "Is Empty",
  "quickcarpet.fluid_info_provider.quickcarpet.has_random_ticks": "Has Random Ticks",
  "quickcarpet.fluid_info_provider.quickcarpet.height": "Height",
  "quickcarpet.fluid_info_provider.quickcarpet.own_height": "Own Height",
  "quickcarpet.fluid_info_provider.quickcarpet.amount": "Amount",
  "quickcarpet.fluid_info_provider.quickcarpet.flow_speed": "Flow Speed",
  "quickcarpet.fluid_info_provider.quickcarpet.flow_yaw": "Flow Direction (Yaw)",
  "quickcarpet.fluid_info_provider.quickcarpet.blast_resistance": "Blast Resistance",
  "command.fix.fixing": "Fixing chunk [%s, %s]...",
  "command.fix.fixed": "Fixed chunk [%s, %s]",
  "command.datatracker.no_entries": "No entries",
  "command.datatracker.entry": "%s (%s): %s"
}